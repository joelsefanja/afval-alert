name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        cd classifier
        pip install --upgrade pip uv
        uv pip install -e .
    
    - name: Run unit tests
      run: |
        cd classifier
        python -m pytest tests/test_unit.py -v
    
    - name: Run integration tests
      run: |
        cd classifier
        python -m pytest tests/test_integration.py -v
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        TEST_MODE: true

  docker-build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./classifier
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/afvalalert-classifier:latest

  deploy:
    needs: docker-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_APP_NAME }}
        images: ${{ secrets.DOCKERHUB_USERNAME }}/afvalalert-classifier:latest