name: Deploy AfvalAlert to GKE

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  DEPLOYMENT_NAME: afval-alert
  IMAGE: afval-alert

permissions:
  contents: read
  id-token: write

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
        service_account: ${{ secrets.GCP_DEPLOY_SA }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Configure Docker to use gcloud
      run: |-
        gcloud --quiet auth configure-docker

    - name: Get GKE credentials
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    - name: Build Docker image
      run: |-
        cd python-classifier/classifier
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:latest" \
          .

    - name: Publish Docker image
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
        docker push "gcr.io/$PROJECT_ID/$IMAGE:latest"

    - name: Deploy to GKE
      run: |-
        # Apply ServiceAccount and Deployment
        kubectl apply -f python-classifier/k8s/serviceaccount.yaml
        kubectl apply -f python-classifier/k8s/deployment.yaml
        
        # Update the deployment image
        kubectl set image deployment/$DEPLOYMENT_NAME fastapi=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA --record
        
        # Wait for rollout to complete
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        
        # Get external IP
        kubectl get services -o wide